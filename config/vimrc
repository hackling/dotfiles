 set nocompatible               " be iMproved
  filetype off                   " required!
set rtp+=~/.vim/bundle/vundle/
 call vundle#rc()

"let vundle manage vundle
Bundle 'gmarik/vundle'

"NERD-Tree
Bundle 'scrooloose/nerdtree'
"Nates-Indent guides
Bundle 'nathanaelkane/vim-indent-guides'
"Tab completion
Bundle 'ervandew/supertab'
"CTRL-P File Finder
Bundle 'kien/ctrlp.vim'
"CTRL-P Modified
Bundle 'jasoncodes/ctrlp-modified.vim'
"Ack
Bundle 'mileszs/ack.vim'
"Git Blame
Bundle 'tpope/vim-fugitive'
"Buff Explorer
Bundle 'bufexplorer.zip'
"Leader-sd Trim WhiteSpace
Bundle 'trailing-whitespace'
"Easy Commenting
Bundle 'tomtom/tcomment_vim'
" "Quick Fix Signs
" Bundle 'tomtom/quickfixsigns_vim'
" "Youcompleteme
" Bundle 'Valloric/YouCompleteMe'
"Colour Tables
Bundle 'guns/xterm-color-table.vim'
"Powerline-Vim
Bundle 'Lokaltog/vim-powerline'
"Up and Down - Bubble Lines
Bundle 'vim-scripts/upAndDown'
"Ennova Colourscheme of choice
Bundle 'nanotech/jellybeans.vim'
"Another Colorscheme
Bundle 'tpope/vim-vividchalk'
"Allows opening of spec files
Bundle 'tpope/vim-rails'
"Syntax checker
Bundle 'scrooloose/syntastic'
"Autocompleter
Bundle 'Shougo/neocomplcache'
"Change surrounds
Bundle 'tpope/vim-surround'
"ColorSchemes Galore
Bundle 'flazz/vim-colorschemes'
"Git signs
Bundle 'airblade/vim-gitgutter'

" Use option-J/K to bubble lines up and down
map <silent> ˚ <Plug>upAndDownUp
nmap <silent> ∆ <Plug>upAndDownDown
vmap <silent> ˚ <Plug>upAndDownVisualUp
vmap <silent> ∆ <Plug>upAndDownVisualDown
imap <silent> ˚ <Plug>upAndDownInsertUp
imap <silent> ∆ <Plug>upAndDownInsertDown

filetype plugin indent on     " required!
syntax enable
set background=dark
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set number
set hidden
set noswapfile
set incsearch " Find the next match as we type the search
set hlsearch " Highlight searches by default
set scrolloff=8 "Set point where the file scrolls
set ignorecase
set nowrap

" colorscheme solarized
colorscheme jellybeans

let mapleader = ","
let g:indent_guides_enable_on_vim_startup=1
let g:syntastic_enable_signs=0

" Nerd Tree mapppings
" NERDTree
noremap <Leader>n :NERDTreeToggle<CR>
noremap <Leader>. :NERDTreeFind<CR>

" " Indent Guide Settings
" let g:indent_guides_auto_colors = 0
" autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
" autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4
" let g:indent_guides_guide_size = 1

" NERDTree
let g:NERDTreeShowLineNumbers = 0
let g:NERDTreeHijackNetrw     = 0
let g:loaded_netrw            = 1 " Disable netrw
let g:loaded_netrwPlugin      = 1 " Disable netrw
let g:NERDTreeIgnore          = ['Icon$']
let g:NERDTreeWinPos          = 'right'
let g:NERDTreeMinimalUI       = 1
let g:NERDTreeDirArrows       = 1

" CtrlP
let g:ctrlp_clear_cache_on_exit   = 1
let g:ctrlp_working_path_mode     = 0 " Handle working path manually
let g:ctrlp_dotfiles              = 0 " Ignore all dot/hidden files
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_custom_ignore         = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$\|backups$\|logs$\|tmp$',
  \ 'file': '',
  \ 'link': '',
  \ }

"Fix cursor for column select
if exists('$TMUX')
  let &t_SI = "\<Esc>[3 q"
  let &t_EI = "\<Esc>[0 q"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif
" Disable scrolling with the mouse
map <ScrollWheelUp> <Nop>
map <ScrollWheelDown> <Nop>
map <ScrollWheelLeft> <Nop>
map <ScrollWheelRight> <Nop>

map <Leader>, <C-^>

" Trim & save
noremap <Leader>sd :FixWhitespace<CR>:w<CR>
map <Leader>t :CtrlP<CR>
" Select all
map <Leader>a ggVG

" Movement & wrapped long lines
" This solves the problem that pressing down jumps your cursor 'over' the current line to the next line
nnoremap j gj
nnoremap k gk

" Easy window navigation
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" Reselect visual block after indent
vnoremap < <gv
vnoremap > >gv

" Highlight word at cursor without changing position
nnoremap <Leader>h *<C-O>

" Jump to start and end of line using the home row keys
noremap H ^
noremap L $

" Clear search
noremap <silent><Leader>/ :nohls<CR>

" Yank and put system pasteboard with <Leader>y/p
noremap <Leader>y "*y
nnoremap <Leader>yy "*yy
noremap <Leader>p "*p
noremap <Leader>P "*P

"Easy commenting
let g:tcommentMapLeaderOp1 = '<Leader>c'

"Highlight the current line you are on.
hi CursorLineNr term=bold ctermfg=225 ctermbg=88 guifg=#ccc5c4
set cursorline

"Highlighting on table completion
"hi Pmenu ctermbg=232 ctermfg=255 gui=bold

"Quick Fix Signs
let g:quickfixsigns_classes = ['vcsdiff']

" CtrlP
let g:ctrlp_clear_cache_on_exit   = 1
let g:ctrlp_working_path_mode     = 0 "Handle working path manually
let g:ctrlp_dotfiles              = 0
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_custom_ignore         = {
  \ 'dir': '\.git$\|\.hg$\|\.svn$\|backups$\|logs$\|tmp$',
  \ 'file': '',
  \ 'link': '',
  \ }

hi Search cterm=underline ctermfg=201

"Powerline Settings

set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs

"CtrlP-modified Settings
map <Leader>T :CtrlPClearAllCaches<CR>:CtrlP<CR>
map <Leader>l :CtrlPBuffer<CR>
map <Leader>m :CtrlPModified<CR>
" map <Leader>d :CtrlPCurFile<CR>

"Ack keyword
nnoremap <Leader>H *<C-O>:AckFromSearch!<CR>
nmap <Leader>f :Ack!<Space>
nmap <Leader>F :AckFromSearch!<CR>

" Persistent Undo
set undodir=$HOME/.vim/undodir
set undofile
set undolevels=1000
set undoreload=10000

" Fold settings
set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=99
set foldminlines=0

" Space to toggle folds
nnoremap <Space> za
vnoremap <Space> za

let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': ['ruby', 'php'],
                           \ 'passive_filetypes': [] }

" Neocomplcache
let g:acp_enableAtStartup = 0                        " Disable AutoComplPop
let g:neocomplcache_enable_at_startup = 1            " Use neocomplcache
let g:neocomplcache_enable_smart_case = 1            " Use smartcase
let g:neocomplcache_enable_camel_case_completion = 1 " Use camel case completion
let g:neocomplcache_enable_underbar_completion = 1   " Use underbar completion
let g:neocomplcache_auto_completion_start_length = 3
